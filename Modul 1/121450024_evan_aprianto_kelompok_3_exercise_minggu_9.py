# -*- coding: utf-8 -*-
"""121450024_Evan Aprianto_Kelompok 3_Exercise Minggu 9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bMh3YcmNW9hbNNuqJtXlWG8a5VFeNVOp

#Latihan Exercise 9

## Nomor 2

###Terdapat data sebagai berikut: data: 1,2,1,2,3,10,11,5,6,19,20,30,50,50,50,20,9,4,5,12,11,11,30,50,90,80,80 dengan mengimplementasi sequence type , buatlah program untuk:

####Menghitung rata rata dari data tersebut
"""

data = [1,2,1,2,3,10,11,5,6,19,20,30,50,50,50,20,9,4,5,12,11,11,30,50,90,80,80]
rata2 = sum(data)/len(data)
print ("Rata-rata dari data tersebut adalah:", rata2)

"""####Mencari apa saja nilai unik yang dari data tersebut"""

data = [1,2,1,2,3,10,11,5,6,19,20,30,50,50,50,20,9,4,5,12,11,11,30,50,90,80,80]
nilai_unik = set(data)
print("Nilai unik dari data tersebut adalah:", nilai_unik)

"""####Menghitung frekuensi kemunculan dari setiap elemen unik tersebut"""

data = [1,2,1,2,3,10,11,5,6,19,20,30,50,50,50,20,9,4,5,12,11,11,30,50,90,80,80]
frekuensi = {}
for i in data:
  if i in frekuensi:
    frekuensi[i] += 1
  else:
    frekuensi[i] = 1
for key, value in frekuensi.items():
  print(f"Frekuensi dari data {key} adalah {value}")

"""## Nomor 3

### Terdapat tabel grade mahasiswa seperti pada soal

####Jelaskan sequence type apa yang cocok digunakan untuk mengolah data tersebut!

menggunakan type list yang berisikan data map berbentuk tipe data dictionary

####Buatlah program untuk menghitung ipk dari setiap mahasiswa pada tabel tersebut!
"""

data_nilai_mahasiswa = [
    {
        "NIM"     : 1301142289,
        "NAMA"    : "ISA",
        "ALPRO"   : "A",
        "STRUKDAT": "A",
        "ADS"     : "A",
        "LMD"     : "A",
        "ALE"     : "A"
     
    },
    {
        "NIM"     : 1301140389,
        "NAMA"    : "LIA",
        "ALPRO"   : "C",
        "STRUKDAT": "A",
        "ADS"     : "B",
        "LMD"     : "A",
        "ALE"     : "AB"
    },
    {
        "NIM"     : 1301142099,
        "NAMA"    : "NAMDY",
        "ALPRO"   : "B",
        "STRUKDAT": "B",
        "ADS"     : "BC",
        "LMD"     : "AB",
        "ALE"     : "D"
    },
    {
        "NIM"     : 1301142091,
        "NAMA"    : "SANDI",
        "ALPRO"   : "B",
        "STRUKDAT": "C",
        "ADS"     : "D",
        "LMD"     : "A",
        "ALE"     : "A"

    }

]

sks_matkul = {
    "alpro": 3,
    "strukdat": 3,
    "ads": 3,
    "lmd": 3,
    "ale": 3,
}
def grade(arg):
    if arg == "A":
      return 4
    elif arg == "AB":
      return 3.5
    elif arg == "B":
      return 3
    elif arg == "BC":
      return 2.5
    elif arg == "C":
      return 2
    elif arg == "D":
      return 1


def hitung_nilai_ipk(data_mhs):
  total_sks = sum((sks_matkul['alpro'],sks_matkul['strukdat'],sks_matkul['ads'],sks_matkul['lmd'],sks_matkul['ale']))
  nilai_grade = (sks_matkul['alpro'] * grade(data_mhs['ALPRO'])) + (sks_matkul['strukdat'] * grade(data_mhs['STRUKDAT'])) + (sks_matkul['ads'] * grade(data_mhs['ADS'])) + (sks_matkul['lmd'] * grade(data_mhs['LMD'])) + (sks_matkul['ale'] * grade(data_mhs['ALE']))
  return nilai_grade / total_sks

for data in data_nilai_mahasiswa:
  print(f"Nim       : {data['NIM']} \nNama      : {data['NAMA']} \nNilai IPK : {hitung_nilai_ipk(data)}\n")

"""## Nomor 4

### The Anagram Problem.
Original Text: 'Institut Teknologi Sumatera'

Result Text: EAIGLKNMROTSU

Buatlah program untuk mengubah sebuah string menjadi string lain dengan rule sebagai berikut:

Hasil result string seluruhnya adalah capital.
Tidak ada huruf yang duplikat dalam string result.
Posisi character si string baru terurut secara ascending, namun index genap dan ganjil di tukar dalam pair. Contoh: AEJK menjadi EAKJ.
"""

originalt = 'Institut Teknologi Sumatera'
unikt = set(originalt.upper())
unikt.remove(' ')
uniksort = sorted(unikt)


unikl = list(uniksort)
for i in range(0,len(unikl),4):
  if(i+1<len(unikl)):
    unikl[i], unikl[i+1] = unikl[i+1], unikl[i]
  if(i+2<len(unikl)):
    unikl[i+2], unikl[i+3] = unikl[i+3], unikl[i+2]

unikst = str(unikl)
new_unikst = unikst.replace('\'','').replace(',','').replace('[','').replace(']','').replace(' ','')

print(f'Original text : {originalt}')
print(f'Result text   : {new_unikst}')